name: CI pipeline excluding main branch
on: 
  push:
    branches: 
      - "!main"
      - "**"
jobs:
  Editor-config-check-rules:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - run: editorconfig-checker

  Linter-pylint-black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: psf/black@stable
        with:
          src: "./app"
          options: "--check --verbose"

  Check-makrdown-files:
    runs-on: ubuntu-latest
    steps:
      - name: Lint with markdown-lint
        uses: articulate/actions-markdownlint@v1
        with:
          files: "**/*.md"
          ignore: node_modules
          config: .markdownlint.json

  Python-unit-tests:
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          pip install flask
      - name: Tests
        run: |
          python -m unittest discover -s ./app -p "*_test.py"

  gitleaks-check:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk-security-ckeck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.10@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build-and-check-docker-container-trivy:
    name: Build docker image and scan it for vulnerabilities 
    runs-on: ubuntu-20.04
    needs: [Python-unit-tests, gitleaks-check, snyk-security-ckeck]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/vodoprovod4ika/devops-programme:${{ github.sha }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/vodoprovod4ika/devops-programme:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: false
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'